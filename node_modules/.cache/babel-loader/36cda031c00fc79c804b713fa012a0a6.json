{"ast":null,"code":"import { compile, derivative } from 'mathjs';\n\nvar Algebrite = require('algebrite');\n\nconst func = (fx, X) => {\n  var expr = compile(fx); // f(x)\n\n  let scope = {\n    x: parseFloat(X)\n  }; //f(x) ; x=input\n\n  return expr.evaluate(scope);\n};\n\nconst funcDiff = X => {\n  var expr = derivative(X, 'x');\n  let scope = {\n    x: parseFloat(X)\n  };\n  return expr.evaluate(scope);\n};\n\nconst funcDiffDegreeN = (fx, X, degree) => {\n  var temp = fx,\n      expr;\n\n  for (var i = 1; i <= degree; i++) {\n    temp = derivative(temp, 'x');\n    expr = temp;\n  }\n\n  let scope = {\n    x: parseFloat(X)\n  };\n  return expr.evaluate(scope);\n};\n\nconst error = (xnew, xold) => {\n  return Math.abs((xnew - xold) / xnew);\n};\n\nconst exactIntegrate = (fx, a, b) => {\n  var expr = compile(Algebrite.integral(Algebrite.eval(fx)).toString());\n  return expr.evaluate({\n    x: b\n  }) - expr.evaluate({\n    x: a\n  });\n};\n\nexport { func, funcDiff, funcDiffDegreeN, error, exactIntegrate };","map":{"version":3,"sources":["C:/Users/acer/Desktop/numer-react/src/group_library/lib_use.js"],"names":["compile","derivative","Algebrite","require","func","fx","X","expr","scope","x","parseFloat","evaluate","funcDiff","funcDiffDegreeN","degree","temp","i","error","xnew","xold","Math","abs","exactIntegrate","a","b","integral","eval","toString"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,QAApC;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,MAAMC,IAAI,GAAG,CAACC,EAAD,EAAKC,CAAL,KAAW;AACpB,MAAIC,IAAI,GAAGP,OAAO,CAACK,EAAD,CAAlB,CADoB,CACI;;AACxB,MAAIG,KAAK,GAAG;AAAEC,IAAAA,CAAC,EAAEC,UAAU,CAACJ,CAAD;AAAf,GAAZ,CAFoB,CAEc;;AAClC,SAAOC,IAAI,CAACI,QAAL,CAAcH,KAAd,CAAP;AACH,CAJD;;AAKA,MAAMI,QAAQ,GAAIN,CAAD,IAAO;AACpB,MAAIC,IAAI,GAAGN,UAAU,CAACK,CAAD,EAAI,GAAJ,CAArB;AACA,MAAIE,KAAK,GAAG;AAACC,IAAAA,CAAC,EAACC,UAAU,CAACJ,CAAD;AAAb,GAAZ;AACA,SAAOC,IAAI,CAACI,QAAL,CAAcH,KAAd,CAAP;AACH,CAJD;;AAMA,MAAMK,eAAe,GAAG,CAACR,EAAD,EAAKC,CAAL,EAAQQ,MAAR,KAAmB;AACvC,MAAIC,IAAI,GAAGV,EAAX;AAAA,MAAeE,IAAf;;AACA,OAAK,IAAIS,CAAC,GAAC,CAAX,EAAeA,CAAC,IAAEF,MAAlB,EAA2BE,CAAC,EAA5B,EAAgC;AAC5BD,IAAAA,IAAI,GAAGd,UAAU,CAACc,IAAD,EAAO,GAAP,CAAjB;AACAR,IAAAA,IAAI,GAAGQ,IAAP;AACH;;AAED,MAAIP,KAAK,GAAG;AAACC,IAAAA,CAAC,EAACC,UAAU,CAACJ,CAAD;AAAb,GAAZ;AACA,SAAOC,IAAI,CAACI,QAAL,CAAcH,KAAd,CAAP;AACH,CATD;;AAUA,MAAMS,KAAK,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC1B,SAAOC,IAAI,CAACC,GAAL,CAAS,CAACH,IAAI,GAAGC,IAAR,IAAgBD,IAAzB,CAAP;AACH,CAFD;;AAGA,MAAMI,cAAc,GAAG,CAACjB,EAAD,EAAKkB,CAAL,EAAQC,CAAR,KAAc;AACjC,MAAIjB,IAAI,GAAGP,OAAO,CAACE,SAAS,CAACuB,QAAV,CAAmBvB,SAAS,CAACwB,IAAV,CAAerB,EAAf,CAAnB,EAAuCsB,QAAvC,EAAD,CAAlB;AACA,SAAOpB,IAAI,CAACI,QAAL,CAAc;AAACF,IAAAA,CAAC,EAACe;AAAH,GAAd,IAAuBjB,IAAI,CAACI,QAAL,CAAc;AAACF,IAAAA,CAAC,EAACc;AAAH,GAAd,CAA9B;AAEH,CAJD;;AAKA,SAASnB,IAAT,EAAeQ,QAAf,EAAyBC,eAAzB,EAA0CI,KAA1C,EAAiDK,cAAjD","sourcesContent":["import { compile, derivative } from 'mathjs';\r\nvar Algebrite = require('algebrite');\r\n\r\nconst func = (fx, X) => {\r\n    var expr = compile(fx); // f(x)\r\n    let scope = { x: parseFloat(X) }; //f(x) ; x=input\r\n    return expr.evaluate(scope);\r\n}\r\nconst funcDiff = (X) => {\r\n    var expr = derivative(X, 'x');\r\n    let scope = {x:parseFloat(X)};\r\n    return expr.evaluate(scope); \r\n}\r\n\r\nconst funcDiffDegreeN = (fx, X, degree) => {\r\n    var temp = fx, expr;\r\n    for (var i=1 ; i<=degree ; i++) {\r\n        temp = derivative(temp, 'x')\r\n        expr = temp\r\n    }\r\n    \r\n    let scope = {x:parseFloat(X)}\r\n    return expr.evaluate(scope)\r\n}\r\nconst error = (xnew, xold) => {\r\n    return Math.abs((xnew - xold) / xnew);\r\n}\r\nconst exactIntegrate = (fx, a, b) => {\r\n    var expr = compile(Algebrite.integral(Algebrite.eval(fx)).toString())\r\n    return expr.evaluate({x:b}) - expr.evaluate({x:a})\r\n\r\n}\r\nexport { func, funcDiff, funcDiffDegreeN, error, exactIntegrate };"]},"metadata":{},"sourceType":"module"}